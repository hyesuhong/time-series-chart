name: AWS EC2 deployment test

on: 
  push:
    branches:
      - main

jobs:
  deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Print ip
        id: ip
        run: |
          ip=$(curl -s https://api.ipify.org)
          echo "My public IP address is: $ip"

      # - name: Install Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 18

      # - name: Cache node modules
      #   id: cache-npm
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     # npm cache files are stored in `~/.npm` on Linux/macOS
      #     path: ~/.npm
      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      #   name: List the state of node modules
      #   continue-on-error: true
      #   run: npm list

      # - name: Install dependencies
      #   run: npm ci

      # - name: Build application
      #   run: npm run build

      # - name: Create SSH key file
      #   run: |
      #     echo "$SSH_PEM_KEY" >> $HOME/su-test.pem
      #     chmod 400 $HOME/su-test.pem
      #   env:
      #     SSH_PEM_KEY: ${{ secrets.AWS_SSH_KEY }}

      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.EC2_ACCESS_ID }}
      #     aws-secret-access-key: ${{ secrets.EC2_ACCESS_SECRET_KEY }}
      #     aws-region: ${{ secrets.EC2_REGION }}

      # - name: 

      # - name: Connect to EC2 by SSH
      #   run: |
      #     ssh -i $HOME/su-test.pem ${SSH_USER}@${SSH_HOSTNAME}
      #   env:
      #     SSH_USER: ${{ secrets.EC2_USER }}
      #     SSH_HOSTNAME: ${{ secrets.EC2_HOSTNAME }}
